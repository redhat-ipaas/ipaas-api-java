<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--

    Copyright (C) 2016 Red Hat, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.redhat.ipaas</groupId>
    <artifactId>ipaas-rest-parent</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <artifactId>runtime</artifactId>
  <name>iPaaS REST :: Runtime</name>
  <packaging>jar</packaging>

  <properties>
    <failOnMissingWebXml>false</failOnMissingWebXml>

    <apidocs.dir>${project.build.directory}/api-docs</apidocs.dir>
    <apidocs.output.dir>${project.build.outputDirectory}/static</apidocs.output.dir>

    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>

    <java-image.version>1.2</java-image.version>

    <keycloak.start.script>./standalone.sh</keycloak.start.script>
    <keycloak.cli.script>./jboss-cli.sh</keycloak.cli.script>
  </properties>

  <build>
    <finalName>runtime</finalName>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <jvmArguments>-server -Xms256m -Xmx512m</jvmArguments>
        </configuration>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
          <execution>
            <id>build-info</id>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-maven-plugin</artifactId>
        <configuration>
          <generator>
            <config>
              <spring-boot>
                <name>rhipaas/ipaas-rest:%l</name>
                <from>fabric8/java-jboss-openjdk8-jdk:${java-image.version}</from>
              </spring-boot>
            </config>
          </generator>
        </configuration>
      </plugin>

      <plugin>
        <groupId>dk.nykredit.swagger</groupId>
        <artifactId>swagger-maven-plugin</artifactId>
        <configuration>
          <outputDirectory>${apidocs.output.dir}</outputDirectory>
          <outputFormats>
            <outputFormat>JSON</outputFormat>
            <outputFormat>YAML</outputFormat>
          </outputFormats>
          <attachSwaggerArtifact>true</attachSwaggerArtifact>
          <resourcePackages>
            <resourcePackage>com.redhat.ipaas.rest.v1.controller.handler.connection</resourcePackage>
            <resourcePackage>com.redhat.ipaas.rest.v1.controller.handler.environment</resourcePackage>
            <resourcePackage>com.redhat.ipaas.rest.v1.controller.handler.integration</resourcePackage>
            <resourcePackage>com.redhat.ipaas.rest.v1.controller.handler.user</resourcePackage>
          </resourcePackages>
          <swaggerConfig>
            <info>
              <title>Red Hat iPaaS API</title>
              <version>v1</version>
              <description>
                The Red Hat iPaaS REST API connects to back-end services on the iPaaS and provides a single entry
                point for the IpaaS Console. For console developement it can run in off-line mode where it only serves
                responses from the response cache.
              </description>
              <license>
                <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
                <name>Apache 2.0</name>
              </license>
              <contact>
                <email>ipaas-dev@redhat.com</email>
                <name>The Red Hat iPaaS Developers</name>
                <url>https://redhat-ipaas.github.io</url>
              </contact>
            </info>
            <schemes>http,https</schemes>
            <host>localhost:8080</host>
            <basePath>/api/v1</basePath>
          </swaggerConfig>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rest</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.github.swagger2markup</groupId>
        <artifactId>swagger2markup-maven-plugin</artifactId>
        <configuration>
          <swaggerInput>${apidocs.output.dir}/swagger.json</swaggerInput>
          <outputDir>${apidocs.dir}/asciidoc</outputDir>
          <config>
            <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
          </config>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>convertSwagger2markup</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <configuration>
          <sourceDirectory>${project.basedir}/src/docs/asciidoc</sourceDirectory>
          <sourceDocumentName>index.adoc</sourceDocumentName>
          <outputDirectory>${apidocs.output.dir}</outputDirectory>
          <backend>html5</backend>
          <sourceHighlighter>coderay</sourceHighlighter>
          <attributes>
            <generated>${apidocs.dir}/asciidoc</generated>
            <toc>left</toc>
            <sectnums>true</sectnums>
            <revnumber>${project.version}</revnumber>
            <revdate>${maven.build.timestamp}</revdate>
            <organization>${project.organization.name}</organization>
          </attributes>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>reserve-ports</id>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <portNames>
                <portName>server.port</portName>
                <portName>keycloak.management.http.port</portName>
                <portName>keycloak.management.https.port</portName>
                <portName>keycloak.ajp.port</portName>
                <portName>keycloak.http.port</portName>
                <portName>keycloak.https.port</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <systemProperties>
                <keycloak.http.port>${keycloak.http.port}</keycloak.http.port>
              </systemProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-keycloak</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${skipITs}</skip>
          <artifactItems>
            <artifactItem>
              <groupId>org.keycloak</groupId>
              <artifactId>keycloak-server-dist</artifactId>
              <version>${keycloak.version}</version>
              <type>tar.gz</type>
              <outputDirectory>${project.build.directory}/keycloak</outputDirectory>
            </artifactItem>
          </artifactItems>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.bazaarvoice.maven.plugins</groupId>
        <artifactId>process-exec-maven-plugin</artifactId>
        <configuration>
          <name>Keycloak</name>
          <workingDir>${project.build.directory}/keycloak/keycloak-${keycloak.version}/bin</workingDir>
          <healthcheckUrl>http://localhost:${keycloak.http.port}/auth</healthcheckUrl>
          <waitAfterLaunch>180</waitAfterLaunch>
          <arguments>
            <argument>${keycloak.start.script}</argument>
            <argument>-Djboss.management.http.port=${keycloak.management.http.port}</argument>
            <argument>-Djboss.management.https.port=${keycloak.management.https.port}</argument>
            <argument>-Djboss.ajp.port=${keycloak.ajp.port}</argument>
            <argument>-Djboss.http.port=${keycloak.http.port}</argument>
            <argument>-Djboss.https.port=${keycloak.https.port}</argument>
            <argument>-Dkeycloak.import=${project.basedir}/src/test/resources/ipaas-keycloak-realm.json</argument>
          </arguments>
          <skip>${skipITs}</skip>
        </configuration>
        <executions>
          <execution>
            <id>start-keycloak</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>stop-keycloak</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${keycloak.cli.script}</executable>
              <workingDirectory>${project.build.directory}/keycloak/keycloak-${keycloak.version}/bin</workingDirectory>
              <arguments>
                <argument>--connect</argument>
                <argument>--controller=localhost:${keycloak.management.http.port}</argument>
                <argument>command=:shutdown</argument>
              </arguments>
              <skip>${skipITs}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- internal -->
    <dependency>
      <groupId>com.redhat.ipaas</groupId>
      <artifactId>rest</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-zipkin</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.paypal.springboot</groupId>
      <artifactId>resteasy-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-spring-security-adapter</artifactId>
    </dependency>

    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>com.launchdarkly</groupId>
      <artifactId>okhttp-eventsource</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.16.14</version>
        <scope>provided</scope>
    </dependency>

  </dependencies>

  <profiles>
    <profile>
      <id>fabric8</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>fmp</id>
                <goals>
                  <goal>resource</goal>
                  <goal>helm</goal>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <keycloak.start.script>.\standalone.bat</keycloak.start.script>
        <keycloak.cli.script>.\jboss-cli.bat</keycloak.cli.script>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.bazaarvoice.maven.plugins</groupId>
            <artifactId>process-exec-maven-plugin</artifactId>
            <configuration>
              <name>Keycloak</name>
              <workingDir>${project.build.directory}/keycloak/keycloak-${keycloak.version}/bin</workingDir>
              <healthcheckUrl>http://localhost:${keycloak.http.port}/auth</healthcheckUrl>
              <waitAfterLaunch>180</waitAfterLaunch>
              <arguments>
                <argument>cmd.exe</argument>
                <argument>/C</argument>
                <argument>${keycloak.start.script}</argument>
                <argument>-Djboss.management.http.port=${keycloak.management.http.port}</argument>
                <argument>-Djboss.management.https.port=${keycloak.management.https.port}</argument>
                <argument>-Djboss.ajp.port=${keycloak.ajp.port}</argument>
                <argument>-Djboss.http.port=${keycloak.http.port}</argument>
                <argument>-Djboss.https.port=${keycloak.https.port}</argument>
                <argument>-Dkeycloak.import=${project.basedir}/src/test/resources/ipaas-keycloak-realm.json</argument>
              </arguments>
              <skip>${skipITs}</skip>
            </configuration>
            <executions>
              <execution>
                <id>start-keycloak</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>stop-keycloak</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>cmd.exe</executable>
                  <workingDirectory>${project.build.directory}/keycloak/keycloak-${keycloak.version}/bin</workingDirectory>
                  <arguments>
                    <argument>/C</argument>
                    <argument>${keycloak.cli.script}</argument>
                    <argument>--connect</argument>
                    <argument>--controller=localhost:${keycloak.management.http.port}</argument>
                    <argument>command=:shutdown</argument>
                  </arguments>
                  <skip>${skipITs}</skip>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>keycloak-default</id>
      <properties>
        <keycloak.management.http.port>9990</keycloak.management.http.port>
        <keycloak.management.https.port>9993</keycloak.management.https.port>
        <keycloak.ajp.port>8009</keycloak.ajp.port>
        <keycloak.http.port>8282</keycloak.http.port>
        <keycloak.https.port>8443</keycloak.https.port>
        <exec.waitForInterrupt>true</exec.waitForInterrupt>
      </properties>
    </profile>
  </profiles>
</project>
