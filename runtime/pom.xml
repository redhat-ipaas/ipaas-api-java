<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--

    Copyright (C) 2016 Red Hat, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.redhat.ipaas</groupId>
    <artifactId>ipaas-api-java-project</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <artifactId>runtime</artifactId>
  <name>iPaaS API Java :: Runtime</name>
  <packaging>jar</packaging>

  <properties>
    <failOnMissingWebXml>false</failOnMissingWebXml>

    <apidocs.dir>${project.build.directory}/api-docs</apidocs.dir>
    <apidocs.output.dir>${project.build.outputDirectory}</apidocs.output.dir>

    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
  </properties>

  <build>
    <finalName>runtime</finalName>
    <plugins>
      <plugin>
        <groupId>org.wildfly.swarm</groupId>
        <artifactId>wildfly-swarm-plugin</artifactId>
        <version>${wildfly.swarm.version}</version>
        <configuration>
          <mainClass>com.redhat.ipaas.runtime.Main</mainClass>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>package</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-maven-plugin</artifactId>
        <version>${fabric8.maven.plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>com.github.kongchen</groupId>
        <artifactId>swagger-maven-plugin</artifactId>
        <version>${maven.swagger.plugin.version}</version>
        <configuration>
          <apiSources>
            <apiSource>
              <locations>
                <location>com.redhat.ipaas.api.v1.rest</location>
              </locations>
              <swaggerDirectory>${apidocs.output.dir}</swaggerDirectory>
              <schemes>
                <scheme>http</scheme>
                <scheme>https</scheme>
              </schemes>
              <host>localhost:8080</host>
              <basePath>/v1</basePath>
              <info>
                <title>Red Hat iPaaS API</title>
                <version>v1</version>
                <description>
                  The Red Hat iPaaS REST API connects to back-end services on the IPaaS and provides a single entry
                  point for the IpaaS Console. For console developement it can run in off-line mode where it only serves
                  responses from the response cache.
                </description>
                <license>
                  <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
                  <name>Apache 2.0</name>
                </license>
                <contact>
                  <email>ipaas-dev@redhat.com</email>
                  <name>The Red Hat iPaaS Developers</name>
                  <url>https://redhat-ipaas.github.io</url>
                </contact>
              </info>
              <attachSwaggerArtifact>true</attachSwaggerArtifact>
            </apiSource>
          </apiSources>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.github.swagger2markup</groupId>
        <artifactId>swagger2markup-maven-plugin</artifactId>
        <version>1.1.0</version>
        <configuration>
          <swaggerInput>${apidocs.output.dir}/swagger.json</swaggerInput>
          <outputDir>${apidocs.dir}/asciidoc</outputDir>
          <config>
            <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
          </config>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>convertSwagger2markup</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>1.5.3</version>
        <configuration>
          <sourceDirectory>${project.basedir}/src/docs/asciidoc</sourceDirectory>
          <sourceDocumentName>index.adoc</sourceDocumentName>
          <outputDirectory>${apidocs.output.dir}</outputDirectory>
          <backend>html5</backend>
          <sourceHighlighter>coderay</sourceHighlighter>
          <attributes>
            <generated>${apidocs.dir}/asciidoc</generated>
            <toc>left</toc>
            <sectnums>true</sectnums>
            <revnumber>${project.version}</revnumber>
            <revdate>${maven.build.timestamp}</revdate>
            <organization>${project.organization.name}</organization>
          </attributes>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- internal -->
    <dependency>
      <groupId>com.redhat.ipaas</groupId>
      <artifactId>api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.ipaas</groupId>
      <artifactId>swagger-ui</artifactId>
    </dependency>
    <!--WildFly Swarm Fractions -->
    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>jaxrs-cdi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>keycloak</artifactId>
    </dependency>
    <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-embedded</artifactId>
    </dependency>
    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>infinispan</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.cache</groupId>
      <artifactId>cache-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>swagger</artifactId>
    </dependency>
    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>swagger-webapp</artifactId>
    </dependency>
    <!-- Test -->
    <dependency>
      <groupId>org.wildfly.swarm</groupId>
      <artifactId>arquillian</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>fabric8</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>fmp</id>
                <goals>
                  <goal>resource</goal>
                  <goal>helm</goal>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>debug</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>wildfly-swarm-plugin</artifactId>
            <configuration>
              <mainClass>com.redhat.ipaas.runtime.Main</mainClass>
              <debugPort>5005</debugPort>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
