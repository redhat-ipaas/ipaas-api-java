[
  {
    "kind": "connector",
    "data": {
      "id": "twitter",
      "name": "Twitter",
      "description": "Direct and event-driven interaction with Twitter timelines, searches, and messages",
      "icon": "fa-twitter",
      "configuredProperties": {},
      "properties": {
        "accessToken": {
          "kind": "property",
          "displayName": "Access Token",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The access token"
        },
        "accessTokenSecret": {
          "kind": "property",
          "displayName": "Access Token Secret",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The access token secret"
        },
        "consumerKey": {
          "kind": "property",
          "displayName": "Consumer Key",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-id"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The consumer key"
        },
        "consumerSecret": {
          "kind": "property",
          "displayName": "Consumer Secret",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-secret"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The consumer secret"
        }
      },
      "actions": [
        {
          "name": "Mention",
          "description": "Search for tweets that mention you",
          "inputDataShape": {
             "kind" : "none"
          },
          "outputDataShape": {
             "kind" : "java",
             "type" : "twitter4j.Status"
          },
          "id": "io.syndesis:twitter-mention-connector:latest",
          "camelConnectorGAV": "io.syndesis:twitter-mention-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "twitter-mention",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Search",
          "description": "Search tweets based one or more keywords",
          "id": "io.syndesis:twitter-search-connector:latest",
          "camelConnectorGAV": "io.syndesis:twitter-search-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "twitter-search",
          "definition": {
            "propertyDefinitionSteps": [{
              "name": "Search criteria",
              "description": "Specify criteria for search",
              "properties": {
                "filterOld": {
                  "kind": "parameter",
                  "displayName": "Filter Old",
                  "group": "filter",
                  "label": "consumer,filter",
                  "required": false,
                  "type": "boolean",
                  "javaType": "boolean",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "defaultValue": true,
                  "description": "Filter out old tweets that have previously been polled. This state is stored in memory only and is based on last tweet id."
                },
                "keywords": {
                  "kind": "parameter",
                  "displayName": "Keywords",
                  "group": "filter",
                  "label": "consumer,filter",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "description": "Multiple search values can be separated with comma"
                },
                "delay": {
                  "kind": "parameter",
                  "displayName": "Delay",
                  "group": "scheduler",
                  "label": "consumer,scheduler",
                  "required": false,
                  "type": "integer",
                  "javaType": "long",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "defaultValue": 5000,
                  "description": "Milliseconds before the next poll."
                }
              }
            }]
          }
        },
        {
          "name": "Send a Tweet",
          "description": "Creates a new tweet",
          "id": "io.syndesis:twitter-tweet-connector:latest",
          "camelConnectorGAV": "io.syndesis:twitter-tweet-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "twitter-tweet",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "description": "Direct message a specific user",
          "name": "Send a Direct Message",
          "id": "io.syndesis:twitter-directmessage-connector:latest",
          "camelConnectorGAV": "io.syndesis:twitter-directmessage-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "twitter-directmessage",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "description": "Retrieve tweets from my timeline",
          "name": "Get My Timeline",
          "id": "io.syndesis:twitter-mytimeline-connector:latest",
          "camelConnectorGAV": "io.syndesis:twitter-mytimeline-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "twitter-mytimeline",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "description": "Retrieve tweets from another user's timeline",
          "name": "Get A Timeline",
          "id": "io.syndesis:twitter-usertimeline-connector:latest",
          "camelConnectorGAV": "io.syndesis:twitter-usertimeline-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "twitter-usertimeline",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "description": "Retrieve tweets which retweet one of my tweets",
          "name": "Get Retweets",
          "id": "io.syndesis:twitter-retweets-connector:latest",
          "camelConnectorGAV": "io.syndesis:twitter-retweets-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "twitter-retweets",
          "definition": {
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "salesforce",
      "name": "Salesforce",
      "description": "Cloud-based Customer Relationship Management",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {
        "loginUrl": {
          "kind": "property",
          "displayName": "Login Url",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "https://login.salesforce.com",
          "description": "URL of the Salesforce instance by default set to https://login.salesforce.com"
        },
        "instanceUrl": {
          "kind": "property",
          "displayName": "Instance URL",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "https://xx.salesforce.com",
          "description": "URL of the Salesforce instance"
        },
        "clientId": {
          "kind": "property",
          "displayName": "Client Id",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-id"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "OAuth Consumer Key of the connected app configured in the Salesforce instance setup. Typically a connected app needs to be configured but one can be provided by installing a package."
        },
        "clientSecret": {
          "kind": "property",
          "displayName": "Client Secret",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-secret"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "OAuth Consumer Secret of the connected app configured in the Salesforce instance setup."
        },
        "refreshToken": {
          "kind": "property",
          "displayName": "Refresh Token",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Refresh token already obtained in the refresh token OAuth flow. One needs to setup a web application and configure a callback URL to receive the refresh token or configure using the builtin callback at https://login.salesforce.com/services/oauth2/success or https://test.salesforce.com/services/oauth2/success and then retrive the refresh_token from the URL at the end of the flow. Note that in development organizations Salesforce allows hosting the callback web application at localhost."
        },
        "userName": {
          "kind": "property",
          "displayName": "User Name",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Username used in OAuth flow to gain access to access token. It's easy to get started with password OAuth flow but in general one should avoid it as it is deemed less secure than other flows."
        },
        "password": {
          "kind": "property",
          "displayName": "Password",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Password used in OAuth flow to gain access to access token. It's easy to get started with password OAuth flow but in general one should avoid it as it is deemed less secure than other flows. Make sure that you append security token to the end of the password if using one."
        }
      },
      "actions": [
        {
          "id": "io.syndesis:salesforce-upsert-contact-connector:latest",
          "name": "Create/Update Contact",
          "description": "Create or Update a Salesforce Contact",
          "inputDataShape": {
             "kind" : "java",
             "type" : "io.syndesis.connector.salesforce.Contact"
          },
          "outputDataShape": {
             "kind" : "none"
          },
          "camelConnectorGAV": "io.syndesis:salesforce-upsert-contact-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-upsert-contact",
          "definition": {
            "propertyDefinitionSteps": [{
              "name": "Unique field",
              "description": "Specify field to hold the identifying value",
              "properties": {
                "sObjectIdName": {
                  "kind": "parameter",
                  "displayName": "SObject Id Name",
                  "group": "common",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "TwitterScreenName__c",
                  "description": "SObject external ID field name"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-create-opportunity-connector:latest",
          "description": "Create a new Salesforce opportunity based on the input message",
          "name": "Create Opportunity",
          "camelConnectorGAV": "io.syndesis:salesforce-create-opportunity-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-create-opportunity",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },{
          "id": "io.syndesis:salesforce-create-lead-connector:latest",
          "description": "Create a new Salesforce lead based on the input message",
          "name": "Create Lead",
          "camelConnectorGAV": "io.syndesis:salesforce-create-lead-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-create-lead",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },{
          "id": "io.syndesis:salesforce-create-account-connector:latest",
          "description": "Create a new Salesforce account based on the input message",
          "name": "Create Account",
          "camelConnectorGAV": "io.syndesis:salesforce-create-account-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-create-account",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },{
          "id": "io.syndesis:salesforce-create-case-connector:latest",
          "description": "Create a new Salesforce case based on the input message",
          "name": "Create Case",
          "camelConnectorGAV": "io.syndesis:salesforce-create-case-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-create-case",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },{
          "id": "io.syndesis:salesforce-search-connector:latest",
          "description": "Execute a search in Salesforce using arbitrary SOQL",
          "name": "Search",
          "camelConnectorGAV": "io.syndesis:salesforce-search-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-search",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },{
          "id": "io.syndesis:salesforce-notification-connector:latest",
          "description": "Trigger an integration when updates occur to a specific Salesforce object",
          "name": "Notification",
          "camelConnectorGAV": "io.syndesis:salesforce-notification-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-notification",
          "definition": {
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "http",
      "name": "HTTP",
      "description": "Interact with APIs and plain HTTP endpoints",
      "icon": "fa-globe",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:http-get-connector:latest",
          "name": "HTTP GET",
          "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
          "inputDataShape": {
             "kind" : "none"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "http-get",
          "definition": {
            "propertyDefinitionSteps": [{
              "name": "HTTP Endpoint",
              "description": "Specify HTTP address to fetch the data from",
              "properties": {
                "httpUri": {
                  "kind": "path",
                  "displayName": "Http Uri",
                  "group": "producer",
                  "label": "producer",
                  "required": true,
                  "type": "string",
                  "javaType": "java.net.URI",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "The url of the HTTP endpoint to call."
                }
              }
            }]
          }
        },
        {
          "id": "io.syndesis:http-post-connector:latest",
          "name": "HTTP POST",
          "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "http-post",
          "definition": {
            "propertyDefinitionSteps": [{
              "name": "HTTP Endpoint",
              "description": "Specify HTTP address to send the data to",
              "properties": {
                "httpUri": {
                  "kind": "path",
                  "displayName": "Http Uri",
                  "group": "producer",
                  "label": "producer",
                  "required": true,
                  "type": "string",
                  "javaType": "java.net.URI",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "The url of the HTTP endpoint to call."
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "timer",
      "name": "Timer",
      "description": "Timer Connector",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis_timer-connector:latest",
          "name": "Periodic Timer",
          "description": "Set a timer that fires at intervals that you specify",
          "inputDataShape": {
             "kind" : "none"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "periodic-timer",
          "definition": {
            "propertyDefinitionSteps": [{
              "name": "Timer parameters",
              "description": "Specify the period for the timer",
              "properties": {
                "period": {
                  "kind": "parameter",
                  "displayName": "Period",
                  "group": "consumer",
                  "required": false,
                  "type": "integer",
                  "javaType": "long",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": 10000,
                  "description": "Period in milli seconds when the timer runs. By default the timer runs every 10000 (10 second)."
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "trade-insight",
      "name": "Trade Insight",
      "description": "Trade Insight API connector",
      "icon": "fa-usd",
      "configuredProperties": {},
      "properties": {
        "host": {
          "kind": "property",
          "displayName": "Host",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": false,
          "description": "Host and port of HTTP service to use (override host in swagger schema)"
        },
        "api_key": {
          "kind": "property",
          "displayName": "API Key",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": false,
          "description": "The API Key used to access the service"
        }
      },
      "actions": [
        {
          "name": "Buy Recommendation",
          "description": "Fetches buy recommendation from Trade Insight API server",
          "inputDataShape": {
            "kind": "none"
          },
          "outputDataShape": {
            "kind": "java",
            "type": "io.syndesis.connector.tradeinsight.Suggestion"
          },
          "id": "io.syndesis:trade-insight-buy-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-buy-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-buy",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Sell Recommendation",
          "description": "Fetches sell recommendation from Trade Insight API server",
          "inputDataShape": {
            "kind": "none"
          },
          "outputDataShape": {
            "kind": "java",
            "type": "io.syndesis.connector.tradeinsight.Suggestion"
          },
          "id": "io.syndesis:trade-insight-sell-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-sell-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-sell",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Top Recommendation",
          "description": "Fetches top recommendation from Trade Insight API server",
          "inputDataShape": {
            "kind": "none"
          },
          "outputDataShape": {
            "kind": "java",
            "type": "io.syndesis.connector.tradeinsight.Suggestion"
          },
          "id": "io.syndesis:trade-insight-top-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-top-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-top",
          "definition": {
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "day-trade",
      "name": "Day Trade",
      "description": "Day Trade API connector",
      "icon": "fa-usd",
      "configuredProperties": {},
      "properties": {
        "host": {
          "kind": "property",
          "displayName": "Host",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": false,
          "description": "Host and port of HTTP service to use (override host in swagger schema)"
        },
        "api_key": {
          "kind": "property",
          "displayName": "API Key",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": false,
          "description": "The API Key used to access the service"
        }
      },
      "actions": [
        {
          "name": "Place Trade",
          "description": "Place trade on Day Trade API server",
          "inputDataShape": {
            "kind": "java",
            "type": "io.syndesis.connector.daytrade.Trade"
          },
          "outputDataShape": {
            "kind": "none"
          },
          "id": "io.syndesis:day-trade-place-connector:latest",
          "camelConnectorGAV": "io.syndesis:day-trade-place-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "day-trade-place",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Retrieve Trade",
          "description": "Retrieve a trade on Day Trade API server",
          "inputDataShape": {
            "kind": "java",
            "type": "io.syndesis.connector.daytrade.Trade"
          },
          "outputDataShape": {
            "kind": "java",
            "type": "io.syndesis.connector.daytrade.Trade"
          },
          "id": "io.syndesis:day-trade-place-connector:latest",
          "camelConnectorGAV": "io.syndesis:day-trade-place-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "day-trade-place",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Get Latest Trade",
          "description": "Get the latest trade on Day Trade API server",
          "inputDataShape": {
            "kind": "none"
          },
          "outputDataShape": {
            "kind": "java",
            "type": "io.syndesis.connector.daytrade.Trade"
          },
          "id": "io.syndesis:day-trade-place-connector:latest",
          "camelConnectorGAV": "io.syndesis:day-trade-place-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "day-trade-place",
          "definition": {
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "linkedin",
      "name": "LinkedIn",
      "description": "Connect and interact with your professional social network",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:linkedin-get-connections-connector:latest",
          "name": "Get Connections",
          "description": "Get all LinkedIn connections",
          "inputDataShape": {
             "kind" : "none"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:linkedin-connections-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "linkedin-connections",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:linkedin-add-invite-connector:latest",
          "name": "Send Invite",
          "description": "Send out a LinkedIn Invite",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "none"
          },
          "camelConnectorGAV": "io.syndesis:linkedin-invite-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "linkedin-invite",
          "definition": {
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "servicenow",
      "name": "ServiceNow",
      "description": "Cloud-based IT Service Management",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:servicenow-connector:latest",
          "name": "service-now",
          "description": "Provides access to all of ServiceNow REST API",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:servicenow-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "servicenow",
          "definition": {
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "github",
      "name": "GitHub",
      "description": "Manage code on GitHub through commits, pull requests, tags, and more",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:github-pullrequest-connector:latest",
          "name": "github-pullrequest",
          "description": "Create a GitHub PullRequest",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:github-pullrequest-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "github-pullrequest"
        },
        {
          "id": "io.syndesis:github-tag-connector:latest",
          "name": "github-tag",
          "description": "Create a GitHub Tag",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:github-tag-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "github-tag"
        },
        {
          "id": "io.syndesis:github-commit-connector:latest",
          "name": "github-commit",
          "description": "Performs a GitHub Commit",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:github-commit-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "github-commit",
          "definition": {
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "gmail",
      "name": "GMail",
      "description": "Send and receive email using Google's Gmail service",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:gmail-send:latest",
          "name": "GMail Send",
          "description": "Send an email",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:gmail-send-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-send",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:gmail-list:latest",
          "name": "GMail List",
          "description": "List incoming messages",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:gmail-list-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-list",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:gmail-get:latest",
          "name": "GMail Get",
          "description": "Get email message",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:gmail-get-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-get",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:gmail-delete:latest",
          "name": "GMail Delete",
          "description": "Delete email message",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:gmail-delete-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-delete",
          "definition": {
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "facebook",
      "name": "Facebook",
      "description": "Access Facebook social network features such as posts, users, checkins, etc",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:facebook-post-connector:latest",
          "name": "Post",
          "description": "Creates a post to Facebook",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:facebook-post-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "facebook-post",
          "definition": {
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:facebook-like-connector:latest",
          "name": "Like",
          "description": "Like something on Facebook",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:facebook-like-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "facebook-like",
          "definition": {
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "jms",
      "name": "Messaging",
      "description": "Produce and consume messages for event-driven interaction",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:jms-producer-connector:latest",
          "name": "Message Producer",
          "description": "Drop a message on a Queue",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:jms-producer-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "jms-producer"
        },
        {
          "id": "io.syndesis:jms-consumer-connector:latest",
          "name": "Message Consumer",
          "description": "Takes a message off a Queue",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:jms-consumer-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "jms-consumer",
          "definition": {
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "ftp",
      "name": "File Transfer",
      "description": "Remote, secure file transfer",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:ftp-connector:latest",
          "name": "File Transport",
          "description": "FTP/SFTP/FPTS file transfer",
          "inputDataShape": {
             "kind" : "any"
          },
          "outputDataShape": {
             "kind" : "any"
          },
          "camelConnectorGAV": "io.syndesis:ftp-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "ftp",
          "definition": {
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connection",
    "data": {
      "id": 1,
      "name": "Twitter Example",
      "description": "Twitter Connection",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "icon": "fa-twitter",
      "connectorId": "twitter",
      "configuredProperties": {}
    }
  },
  {
    "kind": "connection",
    "data": {
      "id": 2,
      "name": "Salesforce Example",
      "description": "Salesforce Connection",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"],
      "icon": "fa-globe",
      "connectorId": "salesforce",
      "configuredProperties": {
        "loginUrl": "https://login.salesforce.com"
      }
    }
  },
  {
    "kind": "connection",
    "data": {
      "id": 3,
      "name": "HTTP Example",
      "description": "HTTP Connection",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"],
      "icon": "fa-globe",
      "connectorId": "http",
      "configuredProperties": {}
    }
  },
  {
    "kind": "connection",
    "data": {
      "id": 4,
      "name": "Timer Example",
      "description": "Timer Connection",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"],
      "icon": "fa-globe",
      "connectorId": "timer",
      "configuredProperties": {}
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "1",
      "name": "Twitter to Salesforce Example",
      "description": "This is an example of a Twitter to Salesforce integration",
      "deployedRevisionNumber": 1,
      "revisions": [{
        "version": 1,
        "spec": {
          "configuration": "",
          "steps": [
            {
              "id": "1",
              "stepKind": "endpoint",
              "connection": {
                "id": 1,
                "name": "Twitter Example",
                "description": "Twitter Connection",
                "icon": "fa-twitter",
                "connectorId": "twitter",
                "configuredProperties": {}
              },
              "action": {
                "id": "1",
                "connectorId": "io.syndesis:twitter-mention-connector:latest",
                "description": "Connection from twitter when anyone mention you",
                "inputDataShape": {
                  "kind": "none"
                },
                "outputDataShape": {
                  "kind": "java",
                  "type": "twitter4j.Status"
                },
                "name": "Twitter Mention",
                "camelConnectorGAV": "io.syndesis:twitter-mention-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "twitter-mention",
                "properties": {
                }
              },
              "configuredProperties": {
              }
            },
            {
              "id": "2",
              "stepKind": "filter",
              "configuredProperties": {
                "filter": "in.body contains \"#RHSummit\""
              }
            },
            {
              "id": "3",
              "stepKind": "mapper",
              "configuredProperties": {
                "atlasmapping": "{ \"AtlasMapping\": { \"jsonType\": \"com.mediadriver.atlas.v2.AtlasMapping\", \"properties\": { \"property\": [] }, \"fieldMappings\": { \"fieldMapping\": [ { \"jsonType\": \"com.mediadriver.atlas.v2.SeparateFieldMapping\", \"inputField\": { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"Name\", \"path\": \"User.name\", \"type\": \"STRING\", \"getMethod\": \"getName\" }, \"fieldActions\": { \"fieldAction\": [] } }, \"outputFields\": { \"mappedField\": [ { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"FirstName\", \"path\": \"FirstName\", \"type\": \"STRING\", \"setMethod\": \"setFirstName\" }, \"fieldActions\": { \"fieldAction\": [ { \"jsonType\": \"com.mediadriver.atlas.v2.MapAction\", \"index\": 0 } ] } }, { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"LastName\", \"path\": \"LastName\", \"type\": \"STRING\", \"setMethod\": \"setLastName\" }, \"fieldActions\": { \"fieldAction\": [ { \"jsonType\": \"com.mediadriver.atlas.v2.MapAction\", \"index\": 1 } ] } } ] } }, { \"jsonType\": \"com.mediadriver.atlas.v2.MapFieldMapping\", \"inputField\": { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"Text\", \"path\": \"Text\", \"type\": \"STRING\", \"getMethod\": \"getText\" }, \"fieldActions\": { \"fieldAction\": [] } }, \"outputField\": { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"Description\", \"path\": \"description\", \"type\": \"STRING\", \"setMethod\": \"setDescription\" }, \"fieldActions\": { \"fieldAction\": [] } } }, { \"jsonType\": \"com.mediadriver.atlas.v2.MapFieldMapping\", \"inputField\": { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"ScreenName\", \"path\": \"User.screenName\", \"type\": \"STRING\", \"getMethod\": \"getScreenName\" }, \"fieldActions\": { \"fieldAction\": [] } }, \"outputField\": { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"Title\", \"path\": \"Title\", \"type\": \"STRING\", \"setMethod\": \"setTitle\" }, \"fieldActions\": { \"fieldAction\": [] } } } ] }, \"name\": \"twitterStatusToSalesforceContact\", \"sourceUri\": \"atlas:java?className=twitter4j.Status\", \"targetUri\": \"atlas:java?className=io.syndesis.connector.salesforce.Contact\" } } "
              }
            },
            {
              "id": "4",
              "stepKind": "endpoint",
              "connection": {
                "id": 2,
                "connectorId": "salesforce",
                "description": "Salesforce Connection",
                "icon": "fa-puzzle-piece",
                "name": "Salesforce Example",
                "configuredProperties": {
                  "loginUrl": "https://login.salesforce.com"
                }
              },
              "action": {
                "id": "2",
                "name": "Salesforce Upsert Contact",
                "description": "Connection to Create or Update Salesforce Contact SObject",
                "inputDataShape": {
                  "kind": "java",
                  "type": "io.syndesis.connector.salesforce.Contact"
                },
                "outputDataShape": {
                  "kind": "none"
                },
                "camelConnectorGAV": "io.syndesis:salesforce-upsert-contact-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "salesforce-upsert-contact",
                "connectorId": "io.syndesis:salesforce-upsert-contact-connector:latest",
                "properties": {
                }
              },
              "configuredProperties": {
              }
            }
          ]
        },
        "currentState": "Active",
        "targetState": "Active"
      }],
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"]
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "2",
      "name": "Timed Pull to Post Example",
      "description": "This is an example of a Timed Pull to Post Integration",
      "deployedRevisionNumber": 1,
      "revisions": [{
        "version": 1,
        "spec": {
          "configuration": "",
          "steps": [
            {
              "id": "5",
              "stepKind": "endpoint",
              "connection": {
                "id": 4,
                "name": "Timer Example",
                "description": "Timer Connection",
                "icon": "fa-globe",
                "connectorId": "timer",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis_timer-connector:latest",
                "name": "PeriodicTimer",
                "description": "Set a timer that fires at intervals that you specify",
                "inputDataShape": {
                  "kind": "none"
                },
                "outputDataShape": {
                  "kind": "any"
                },
                "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "periodic-timer",
                "properties": {
                  "period": {
                    "kind": "parameter",
                    "displayName": "Period",
                    "group": "consumer",
                    "required": false,
                    "type": "integer",
                    "javaType": "long",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "defaultValue": 10000,
                    "description": "Period in milli seconds when the timer runs. By default the timer runs every 10000 (10 second)."
                  }
                }
              },
              "configuredProperties": {
                "period": "500"
              }
            },
            {
              "id": "6",
              "stepKind": "log",
              "configuredProperties": {
                "message": "Hello World! ${body}",
                "loggingLevel": "INFO"
              }
            },
            {
              "id": "7",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-post-connector:latest",
                "name": "HTTP POST",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind": "any"
                },
                "outputDataShape": {
                  "kind": "any"
                },
                "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-post",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/bye"
              }
            },
            {
              "id": "8",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-get-connector:latest",
                "name": "HTTP GET",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind": "none"
                },
                "outputDataShape": {
                  "kind": "any"
                },
                "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-get",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/hello"
              }
            }
          ]
        },
        "targetState": "Active",
        "currentState": "Active",
        "currentMessage": "This integration failed. Please contact system admin for errors."
      }],
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"]
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "3",
      "name": "Breakaway Example",
      "description": "This is an example in Active state",
      "deployedRevisionNumber": 1,
      "revisions": [{
        "version": 1,
        "spec": {
          "configuration": "",
          "steps": [
            {
              "id": "5",
              "stepKind": "endpoint",
              "connection": {
                "id": 4,
                "name": "Timer Example",
                "description": "Timer Connection",
                "icon": "fa-globe",
                "connectorId": "timer",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis_timer-connector:latest",
                "name": "PeriodicTimer",
                "description": "Set a timer that fires at intervals that you specify",
                "inputDataShape": {
                  "kind": "none"
                },
                "outputDataShape": {
                  "kind": "any"
                },
                "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "periodic-timer",
                "properties": {
                  "period": {
                    "kind": "parameter",
                    "displayName": "Period",
                    "group": "consumer",
                    "required": false,
                    "type": "integer",
                    "javaType": "long",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "defaultValue": 10000,
                    "description": "Period in milli seconds when the timer runs. By default the timer runs every 10000 (10 second)."
                  }
                }
              },
              "configuredProperties": {
                "period": "500"
              }
            },
            {
              "id": "6",
              "stepKind": "log",
              "configuredProperties": {
                "message": "Hello World! ${body}",
                "loggingLevel": "INFO"
              }
            },
            {
              "id": "7",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-post-connector:latest",
                "name": "HTTP POST",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind": "any"
                },
                "outputDataShape": {
                  "kind": "any"
                },
                "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-post",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/bye"
              }
            },
            {
              "id": "8",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-get-connector:latest",
                "name": "HTTP GET",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind": "none"
                },
                "outputDataShape": {
                  "kind": "any"
                },
                "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-get",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/hello"
              }
            }
          ]
        },
        "targetState": "Active",
        "currentState": "Active"
      }],
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"]
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "4",
      "name": "Facebook Message to Twitter",
      "description": "This is an example in Deactivated state",
      "deployedRevisionNumber": 1,
      "revisions": [{
        "version": 1,
        "spec": {
          "configuration": "",
          "steps": [
            {
              "id": "5",
              "stepKind": "endpoint",
              "connection": {
                "id": 4,
                "name": "Timer Example",
                "description": "Timer Connection",
                "icon": "fa-globe",
                "connectorId": "timer",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis_timer-connector:latest",
                "name": "PeriodicTimer",
                "description": "Set a timer that fires at intervals that you specify",
                "inputDataShape": {
                  "kind" : "none"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "periodic-timer",
                "properties": {
                  "period": {
                    "kind": "parameter",
                    "displayName": "Period",
                    "group": "consumer",
                    "required": false,
                    "type": "integer",
                    "javaType": "long",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "defaultValue": 10000,
                    "description": "Period in milli seconds when the timer runs. By default the timer runs every 10000 (10 second)."
                  }
                }
              },
              "configuredProperties": {
                "period": "500"
              }
            },{
              "id": "6",
              "stepKind": "log",
              "configuredProperties": {
                "message": "Hello World! ${body}",
                "loggingLevel": "INFO"
              }
            },
            {
              "id": "7",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-post-connector:latest",
                "name": "HTTP POST",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind" : "any"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-post",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/bye"
              }
            },{
              "id": "8",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-get-connector:latest",
                "name": "HTTP GET",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind" : "none"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-get",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/hello"
              }
            }
          ]
        },
        "targetState": "Inactive",
        "currentState": "Inactive"
      }],
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,

      "tags":["example","test"]
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "5",
      "name": "Facebook Photo to Twitter",
      "description": "This is an example in Pending state",
      "revisions": [],
      "draftRevision": {
        "spec": {
          "configuration": "",
          "steps": [
            {
              "id": "5",
              "stepKind": "endpoint",
              "connection": {
                "id": 4,
                "name": "Timer Example",
                "description": "Timer Connection",
                "icon": "fa-globe",
                "connectorId": "timer",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis_timer-connector:latest",
                "name": "PeriodicTimer",
                "description": "Set a timer that fires at intervals that you specify",
                "inputDataShape": {
                  "kind" : "none"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "periodic-timer",
                "properties": {
                  "period": {
                    "kind": "parameter",
                    "displayName": "Period",
                    "group": "consumer",
                    "required": false,
                    "type": "integer",
                    "javaType": "long",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "defaultValue": 10000,
                    "description": "Period in milli seconds when the timer runs. By default the timer runs every 10000 (10 second)."
                  }
                }
              },
              "configuredProperties": {
                "period": "500"
              }
            },{
              "id": "6",
              "stepKind": "log",
              "configuredProperties": {
                "message": "Hello World! ${body}",
                "loggingLevel": "INFO"
              }
            },
            {
              "id": "7",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-post-connector:latest",
                "name": "HTTP POST",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind" : "any"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-post",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/bye"
              }
            },{
              "id": "8",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-get-connector:latest",
                "name": "HTTP GET",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind" : "none"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-get",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/hello"
              }
            }
          ]
        },
        "targetState": "Active",
        "currentState": "Draft"
      },
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"]
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "6",
      "name": "Update Client Service Example",
      "description": "This is an example in Draft state",
      "draftRevision": {
        "spec": {
          "configuration": "",
          "steps": [
            {
              "id": "5",
              "stepKind": "endpoint",
              "connection": {
                "id": 4,
                "name": "Timer Example",
                "description": "Timer Connection",
                "icon": "fa-globe",
                "connectorId": "timer",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis_timer-connector:latest",
                "name": "PeriodicTimer",
                "description": "Set a timer that fires at intervals that you specify",
                "inputDataShape": {
                  "kind" : "none"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "periodic-timer",
                "properties": {
                  "period": {
                    "kind": "parameter",
                    "displayName": "Period",
                    "group": "consumer",
                    "required": false,
                    "type": "integer",
                    "javaType": "long",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "defaultValue": 10000,
                    "description": "Period in milli seconds when the timer runs. By default the timer runs every 10000 (10 second)."
                  }
                }
              },
              "configuredProperties": {
                "period": "500"
              }
            },{
              "id": "6",
              "stepKind": "log",
              "configuredProperties": {
                "message": "Hello World! ${body}",
                "loggingLevel": "INFO"
              }
            },
            {
              "id": "7",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-post-connector:latest",
                "name": "HTTP POST",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind" : "any"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-post",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/bye"
              }
            },{
              "id": "8",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-get-connector:latest",
                "name": "HTTP GET",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind" : "none"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-get",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/hello"
              }
            }
          ]
        },
        "targetState": "Draft",
        "currentState": "Draft"
      },
      "revisions": [],
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,

      "tags":["example","test"]
    }
  },
    {
    "kind": "integration",
    "data": {
      "id": "7",
      "name": "eleted Client Service Example",
      "description": "This is an example in Deleted state",
      "deployedRevisionNumber": 1,
      "revisions": [{
        "version": 1,
        "spec": {
          "configuration": "",
          "steps": [
            {
              "id": "5",
              "stepKind": "endpoint",
              "connection": {
                "id": 4,
                "name": "Timer Example",
                "description": "Timer Connection",
                "icon": "fa-globe",
                "connectorId": "timer",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis_timer-connector:latest",
                "name": "PeriodicTimer",
                "description": "Set a timer that fires at intervals that you specify",
                "inputDataShape": {
                  "kind" : "none"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "periodic-timer",
                "properties": {
                  "period": {
                    "kind": "parameter",
                    "displayName": "Period",
                    "group": "consumer",
                    "required": false,
                    "type": "integer",
                    "javaType": "long",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "defaultValue": 10000,
                    "description": "Period in milli seconds when the timer runs. By default the timer runs every 10000 (10 second)."
                  }
                }
              },
              "configuredProperties": {
                "period": "500"
              }
            },{
              "id": "6",
              "stepKind": "log",
              "configuredProperties": {
                "message": "Hello World! ${body}",
                "loggingLevel": "INFO"
              }
            },
            {
              "id": "7",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-post-connector:latest",
                "name": "HTTP POST",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind" : "any"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-post",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/bye"
              }
            },{
              "id": "8",
              "stepKind": "endpoint",
              "connection": {
                "id": 3,
                "name": "HTTP Example",
                "description": "HTTP Connection",
                "icon": "fa-globe",
                "connectorId": "http",
                "configuredProperties": {}
              },
              "action": {
                "id": "io.syndesis:http-get-connector:latest",
                "name": "HTTP GET",
                "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
                "inputDataShape": {
                  "kind" : "none"
                },
                "outputDataShape": {
                  "kind" : "any"
                },
                "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
                "camelConnectorPrefix": "http-get",
                "properties": {
                  "httpUri": {
                    "kind": "path",
                    "displayName": "Http Uri",
                    "group": "producer",
                    "label": "producer",
                    "required": true,
                    "type": "string",
                    "javaType": "java.net.URI",
                    "tags":[],
                    "deprecated": false,
                    "secret": false,
                    "description": "The url of the HTTP endpoint to call."
                  }
                }
              },
              "configuredProperties": {
                "httpUri": "http://localhost:8080/hello"
              }
            }
          ]
        },
        "targetState": "Undeployed",
        "currentState": "Undeployed"
      }],
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"]
    }
  }
]
