[
  {
    "kind": "connector",
    "data": {
      "id": "twitter",
      "name": "Twitter",
      "description": "Direct and event-driven interaction with Twitter timelines, searches, and messages",
      "icon": "fa-twitter",
      "configuredProperties": {},
      "properties": {
        "accessToken": {
          "kind": "property",
          "displayName": "Access Token",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The access token"
        },
        "accessTokenSecret": {
          "kind": "property",
          "displayName": "Access Token Secret",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The access token secret"
        },
        "consumerKey": {
          "kind": "property",
          "displayName": "Consumer Key",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-id"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The consumer key"
        },
        "consumerSecret": {
          "kind": "property",
          "displayName": "Consumer Secret",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-secret"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The consumer secret"
        }
      },
      "actions": [
        {
          "name": "Mention",
          "description": "Search for tweets that mention you",
          "id": "io.syndesis:twitter-mention-connector:latest",
          "camelConnectorGAV": "io.syndesis:twitter-mention-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "twitter-mention",
          "definition": {
            "inputDataShape": {
               "kind": "none"
            },
            "outputDataShape": {
               "kind": "java",
               "type": "twitter4j.Status"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Search",
          "description": "Search tweets based one or more keywords",
          "id": "io.syndesis:twitter-search-connector:latest",
          "camelConnectorGAV": "io.syndesis:twitter-search-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "twitter-search",
          "definition": {
            "inputDataShape": {
               "kind" : "none"
            },
            "outputDataShape": {
               "kind" : "java",
               "type" : "twitter4j.Status"
            },
            "propertyDefinitionSteps": [{
              "name": "Search criteria",
              "description": "Specify criteria for search",
              "properties": {
                "filterOld": {
                  "kind": "parameter",
                  "displayName": "Filter Old",
                  "group": "filter",
                  "label": "consumer,filter",
                  "required": false,
                  "type": "boolean",
                  "javaType": "boolean",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "defaultValue": true,
                  "description": "Filter out old tweets that have previously been polled. This state is stored in memory only and is based on last tweet id."
                },
                "keywords": {
                  "kind": "parameter",
                  "displayName": "Keywords",
                  "group": "filter",
                  "label": "consumer,filter",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "description": "Multiple search values can be separated with comma"
                },
                "delay": {
                  "kind": "parameter",
                  "displayName": "Delay",
                  "group": "scheduler",
                  "label": "consumer,scheduler",
                  "required": false,
                  "type": "integer",
                  "javaType": "long",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "defaultValue": 5000,
                  "description": "Milliseconds before the next poll."
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "salesforce",
      "name": "Salesforce",
      "description": "Cloud-based Customer Relationship Management",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {
        "loginUrl": {
          "kind": "property",
          "displayName": "Login Url",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "https://login.salesforce.com",
          "description": "URL of the Salesforce instance by default set to https://login.salesforce.com"
        },
        "instanceUrl": {
          "kind": "property",
          "displayName": "Instance URL",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "",
          "description": "URL of the Salesforce instance"
        },
        "clientId": {
          "kind": "property",
          "displayName": "Client Id",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-id"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "OAuth Consumer Key of the connected app configured in the Salesforce instance setup. Typically a connected app needs to be configured but one can be provided by installing a package."
        },
        "clientSecret": {
          "kind": "property",
          "displayName": "Client Secret",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-secret"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "OAuth Consumer Secret of the connected app configured in the Salesforce instance setup."
        },
        "refreshToken": {
          "kind": "property",
          "displayName": "Refresh Token",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Refresh token already obtained in the refresh token OAuth flow. One needs to setup a web application and configure a callback URL to receive the refresh token or configure using the builtin callback at https://login.salesforce.com/services/oauth2/success or https://test.salesforce.com/services/oauth2/success and then retrive the refresh_token from the URL at the end of the flow. Note that in development organizations Salesforce allows hosting the callback web application at localhost."
        },
        "userName": {
          "kind": "property",
          "displayName": "User Name",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Username used in OAuth flow to gain access to access token. It's easy to get started with password OAuth flow but in general one should avoid it as it is deemed less secure than other flows."
        },
        "password": {
          "kind": "property",
          "displayName": "Password",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Password used in OAuth flow to gain access to access token. It's easy to get started with password OAuth flow but in general one should avoid it as it is deemed less secure than other flows. Make sure that you append security token to the end of the password if using one."
        }
      },
      "actions": [
        {
          "id": "io.syndesis:salesforce-upsert-contact-connector:latest",
          "name": "Create/Update Contact",
          "description": "Create or Update a Salesforce Contact",
          "camelConnectorGAV": "io.syndesis:salesforce-upsert-contact-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-upsert-contact",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind" : "java",
               "type" : "io.syndesis.connector.salesforce.Contact"
            },
            "outputDataShape": {
               "kind" : "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Unique field",
              "description": "Specify field to hold the identifying value",
              "properties": {
                "sObjectIdName": {
                  "kind": "parameter",
                  "displayName": "SObject Id Name",
                  "group": "common",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "TwitterScreenName__c",
                  "description": "SObject external ID field name"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-create-sobject-connector:latest",
          "name": "Create Salesforce object",
          "description": "Create Salesforce Object",
          "camelConnectorGAV": "io.syndesis:salesforce-create-sobject-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-create-sobject",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "json-schema"
            },
            "outputDataShape": {
               "kind": "java",
               "type": "org.apache.camel.component.salesforce.api.dto.CreateSObjectResult"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-delete-sobject-connector:latest",
          "name": "Delete Salesforce object",
          "description": "Delete Salesforce Object",
          "camelConnectorGAV": "io.syndesis:salesforce-delete-sobject-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-delete-sobject",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.IdToDelete"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-delete-sobject-with-id-connector:latest",
          "name": "Delete Salesforce object by external ID",
          "description": "Delete Salesforce Object by external ID",
          "camelConnectorGAV": "io.syndesis:salesforce-delete-sobject-with-id-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-delete-sobject-with-id",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.ExternalIdToDelete"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            },{
              "name": "Unique field",
              "description": "Specify field to hold the identifying value",
              "properties": {
                "sObjectIdName": {
                  "kind": "parameter",
                  "displayName": "SObject Id Name",
                  "group": "common",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "SObject external ID field name"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-get-sobject-with-id-connector:latest",
          "name": "Fetch Salesforce object by unique ID",
          "description": "Fetch Salesforce object by unique ID",
          "camelConnectorGAV": "io.syndesis:salesforce-get-sobject-with-id-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-get-sobject-with-id",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.ExternalIdToGet"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            },{
              "name": "Unique field",
              "description": "Specify field to hold the identifying value",
              "properties": {
                "sObjectIdName": {
                  "kind": "parameter",
                  "displayName": "SObject Id Name",
                  "group": "common",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "SObject external ID field name"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-update-sobject-connector:latest",
          "name": "Update Salesforce object",
          "description": "Update Salesforce Object",
          "camelConnectorGAV": "io.syndesis:salesforce-update-sobject-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-update-sobject",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "json-schema"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-update-sobject-connector:latest",
          "name": "Update Salesforce object",
          "description": "Update Salesforce Object",
          "camelConnectorGAV": "io.syndesis:salesforce-update-sobject-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-update-sobject",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "json-schema"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-upsert-sobject-connector:latest",
          "name": "Create/Update Salesforce object",
          "description": "Create or Update a Salesforce Object",
          "camelConnectorGAV": "io.syndesis:salesforce-upsert-sobject-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-upsert-sobject",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "json-schema"
            },
            "outputDataShape": {
               "kind": "java",
               "type": "org.apache.camel.component.salesforce.api.dto.CreateSObjectResult"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            },{
              "name": "Unique field",
              "description": "Specify field to hold the identifying value",
              "properties": {
                "sObjectIdName": {
                  "kind": "parameter",
                  "displayName": "SObject Id Name",
                  "group": "common",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "SObject external ID field name"
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "http",
      "name": "HTTP",
      "description": "Interact with APIs and plain HTTP endpoints",
      "icon": "fa-globe",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:http-get-connector:latest",
          "name": "HTTP GET",
          "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
          "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "http-get-connector",
          "definition": {
            "inputDataShape": {
               "kind" : "none"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": [{
              "name": "HTTP Endpoint",
              "description": "Specify HTTP address to fetch the data from",
              "properties": {
                "httpUri": {
                  "kind": "path",
                  "displayName": "Http Uri",
                  "group": "producer",
                  "label": "producer",
                  "required": true,
                  "type": "string",
                  "javaType": "java.net.URI",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "The url of the HTTP endpoint to call."
                }
              }
            }]
          }
        },
        {
          "id": "io.syndesis:http-post-connector:latest",
          "name": "HTTP POST",
          "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
          "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "http-post-connector",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": [{
              "name": "HTTP Endpoint",
              "description": "Specify HTTP address to send the data to",
              "properties": {
                "httpUri": {
                  "kind": "path",
                  "displayName": "Http Uri",
                  "group": "producer",
                  "label": "producer",
                  "required": true,
                  "type": "string",
                  "javaType": "java.net.URI",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "The url of the HTTP endpoint to call."
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "timer",
      "name": "Timer",
      "description": "Timer Connector",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis_timer-connector:latest",
          "name": "Periodic Timer",
          "description": "Set a timer that fires at intervals that you specify",
          "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "periodic-timer",
          "definition": {
            "inputDataShape": {
               "kind" : "none"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": [{
              "name": "Timer parameters",
              "description": "Specify the period for the timer",
              "properties": {
                "period": {
                  "kind": "parameter",
                  "displayName": "Period",
                  "group": "consumer",
                  "required": false,
                  "type": "integer",
                  "javaType": "long",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": 10000,
                  "description": "Period in milli seconds when the timer runs. By default the timer runs every 10000 (10 second)."
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "trade-insight",
      "name": "Trade Insight",
      "description": "Trade Insight API connector",
      "icon": "fa-usd",
      "configuredProperties": {},
      "properties": {
        "host": {
          "kind": "property",
          "displayName": "Host",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": false,
          "description": "Host and port of HTTP service to use (override host in swagger schema)"
        },
        "api_key": {
          "kind": "property",
          "displayName": "API Key",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": false,
          "description": "The API Key used to access the service"
        }
      },
      "actions": [
        {
          "name": "Buy Recommendation",
          "description": "Fetches buy recommendation from Trade Insight API server",
          "id": "io.syndesis:trade-insight-buy-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-buy-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-buy",
          "definition": {
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.tradeinsight.Suggestion"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Sell Recommendation",
          "description": "Fetches sell recommendation from Trade Insight API server",
          "id": "io.syndesis:trade-insight-sell-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-sell-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-sell",
          "definition": {
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.tradeinsight.Suggestion"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Top Recommendation",
          "description": "Fetches top recommendation from Trade Insight API server",
          "id": "io.syndesis:trade-insight-top-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-top-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-top",
          "definition": {
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.tradeinsight.Suggestion"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "day-trade",
      "name": "Day Trade",
      "description": "Day Trade API connector",
      "icon": "fa-usd",
      "configuredProperties": {},
      "properties": {
        "host": {
          "kind": "property",
          "displayName": "Host",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": false,
          "description": "Host and port of HTTP service to use (override host in swagger schema)"
        },
        "api_key": {
          "kind": "property",
          "displayName": "API Key",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": false,
          "description": "The API Key used to access the service"
        }
      },
      "actions": [
        {
          "name": "Place Trade",
          "description": "Place trade on Day Trade API server",
          "id": "io.syndesis:day-trade-place-connector:latest",
          "camelConnectorGAV": "io.syndesis:day-trade-place-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "day-trade-place",
          "definition": {
            "inputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.daytrade.Trade"
            },
            "outputDataShape": {
              "kind": "none"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Retrieve Trade",
          "description": "Retrieve a trade on Day Trade API server",
          "id": "io.syndesis:day-trade-place-connector:latest",
          "camelConnectorGAV": "io.syndesis:day-trade-place-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "day-trade-place",
          "definition": {
            "inputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.daytrade.Trade"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.daytrade.Trade"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Get Latest Trade",
          "description": "Get the latest trade on Day Trade API server",
          "id": "io.syndesis:day-trade-place-connector:latest",
          "camelConnectorGAV": "io.syndesis:day-trade-place-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "day-trade-place",
          "definition": {
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.daytrade.Trade"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "linkedin",
      "name": "LinkedIn",
      "description": "Connect and interact with your professional social network",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:linkedin-get-connections-connector:latest",
          "name": "Get Connections",
          "description": "Get all LinkedIn connections",
          "camelConnectorGAV": "io.syndesis:linkedin-connections-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "linkedin-connections",
          "definition": {
            "inputDataShape": {
               "kind" : "none"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:linkedin-add-invite-connector:latest",
          "name": "Send Invite",
          "description": "Send out a LinkedIn Invite",
          "camelConnectorGAV": "io.syndesis:linkedin-invite-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "linkedin-invite",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "none"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "servicenow",
      "name": "ServiceNow",
      "description": "Cloud-based IT Service Management",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:servicenow-connector:latest",
          "name": "service-now",
          "description": "Provides access to all of ServiceNow REST API",
          "camelConnectorGAV": "io.syndesis:servicenow-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "servicenow",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "github",
      "name": "GitHub",
      "description": "Manage code on GitHub through commits, pull requests, tags, and more",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:github-pullrequest-connector:latest",
          "name": "github-pullrequest",
          "description": "Create a GitHub PullRequest",
          "camelConnectorGAV": "io.syndesis:github-pullrequest-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "github-pullrequest",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            }
          }
        },
        {
          "id": "io.syndesis:github-tag-connector:latest",
          "name": "github-tag",
          "description": "Create a GitHub Tag",
          "camelConnectorGAV": "io.syndesis:github-tag-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "github-tag",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            }
          }
        },
        {
          "id": "io.syndesis:github-commit-connector:latest",
          "name": "github-commit",
          "description": "Performs a GitHub Commit",
          "camelConnectorGAV": "io.syndesis:github-commit-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "github-commit",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "gmail",
      "name": "GMail",
      "description": "Send and receive email using Google's Gmail service",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:gmail-send:latest",
          "name": "GMail Send",
          "description": "Send an email",
          "camelConnectorGAV": "io.syndesis:gmail-send-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-send",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:gmail-list:latest",
          "name": "GMail List",
          "description": "List incoming messages",
          "camelConnectorGAV": "io.syndesis:gmail-list-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-list",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:gmail-get:latest",
          "name": "GMail Get",
          "description": "Get email message",
          "camelConnectorGAV": "io.syndesis:gmail-get-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-get",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:gmail-delete:latest",
          "name": "GMail Delete",
          "description": "Delete email message",
          "camelConnectorGAV": "io.syndesis:gmail-delete-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-delete",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "facebook",
      "name": "Facebook",
      "description": "Access Facebook social network features such as posts, users, checkins, etc",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:facebook-post-connector:latest",
          "name": "Post",
          "description": "Creates a post to Facebook",
          "camelConnectorGAV": "io.syndesis:facebook-post-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "facebook-post",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:facebook-like-connector:latest",
          "name": "Like",
          "description": "Like something on Facebook",
          "camelConnectorGAV": "io.syndesis:facebook-like-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "facebook-like",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "jms",
      "name": "Messaging",
      "description": "Produce and consume messages for event-driven interaction",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:jms-producer-connector:latest",
          "name": "Message Producer",
          "description": "Drop a message on a Queue",
          "camelConnectorGAV": "io.syndesis:jms-producer-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "jms-producer",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            }
          }
        },
        {
          "id": "io.syndesis:jms-consumer-connector:latest",
          "name": "Message Consumer",
          "description": "Takes a message off a Queue",
          "camelConnectorGAV": "io.syndesis:jms-consumer-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "jms-consumer",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "ftp",
      "name": "File Transfer",
      "description": "Remote, secure file transfer",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:ftp-connector:latest",
          "name": "File Transport",
          "description": "FTP/SFTP/FPTS file transfer",
          "camelConnectorGAV": "io.syndesis:ftp-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "ftp",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "sql-stored",
      "name": "SQL Stored Procedure",
      "description": "Relational Database SQL Stored procedure invocation",
      "icon": "fa-database",
      "configuredProperties": {},
      "properties": {
        "url": {
          "kind": "property",
          "displayName": "Connection URL",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "jdbc:postgresql:database",
          "description": "JDBC URL of the database"
        },
        "user": {
          "kind": "property",
          "displayName": "Username",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "",
          "description": "Username for the database connection"
        },
        "password": {
          "kind": "property",
          "displayName": "Password",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Password for the database connection"
        },
        "schema": {
          "kind": "property",
          "displayName": "Schema",
          "group": "producer",
          "label": "common",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Database schema"
        },
        "catalog": {
          "kind": "property",
          "displayName": "Catalog",
          "group": "producer",
          "label": "common",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Database catalog"
        }
      },
      "actions": [
        {
          "id": "io.syndesis:sql-stored-connector:latest",
          "name": "Invoke SQL stored procedure",
          "description": "Invoke SQL stored procedure to get data in and/or out",
          "camelConnectorGAV": "io.syndesis:sql-stored-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "sql-stored-connector",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind" : "json-schema"
            },
            "outputDataShape": {
               "kind" : "json-schema"
            },
            "propertyDefinitionSteps": [{
              "name": "Procedure Name",
              "description": "Select the Stored Procedure",
              "properties": {
                "procedureName": {
                  "kind": "parameter",
                  "displayName": "Procedure Name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "Name of the Store Procedure"
                }
              }
            },{
              "name": "SQL stored procedure parameters",
              "description": "Specify SQL stored procedure parameters",
              "properties": {
                "template": {
                  "kind": "parameter",
                  "displayName": "Template",
                  "group": "producer",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "StoredProcedure template to perform"
                },
                "batch": {
                  "kind": "parameter",
                  "displayName": "Batch",
                  "group": "producer",
                  "required": false,
                  "type": "boolean",
                  "javaType": "boolean",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "false",
                  "description": "Enables or disables batch mode"
                },
                "noop": {
                  "kind": "parameter",
                  "displayName": "Noop",
                  "group": "producer",
                  "required": false,
                  "type": "boolean",
                  "javaType": "boolean",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "false",
                  "description": "If set will ignore the results of the template and use the existing IN message as the OUT message for the continuation of processing"
                }
              }
            }]
          }
        }
      ]
    }
  }
]
