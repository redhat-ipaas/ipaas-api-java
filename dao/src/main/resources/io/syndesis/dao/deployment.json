[
  {
    "kind": "connector",
    "data": {
      "id": "twitter",
      "name": "Twitter",
      "description": "Direct and event-driven interaction with Twitter timelines, searches, and messages",
      "icon": "fa-twitter",
      "configuredProperties": {},
      "properties": {
        "accessToken": {
          "kind": "property",
          "displayName": "Access Token",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The access token"
        },
        "accessTokenSecret": {
          "kind": "property",
          "displayName": "Access Token Secret",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The access token secret"
        },
        "consumerKey": {
          "kind": "property",
          "displayName": "Consumer Key",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-id"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The consumer key"
        },
        "consumerSecret": {
          "kind": "property",
          "displayName": "Consumer Secret",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-secret"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The consumer secret"
        }
      },
      "actions": [
        {
          "name": "Mention",
          "description": "Search for tweets that mention you",
          "id": "io.syndesis:twitter-mention-connector:latest",
          "pattern": "From",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:twitter-mention-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "twitter-mention-connector",
            "inputDataShape": {
               "kind": "none"
            },
            "outputDataShape": {
               "kind": "java",
               "type": "twitter4j.Status"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Search",
          "description": "Search tweets based one or more keywords",
          "id": "io.syndesis:twitter-search-connector:latest",
          "pattern": "From",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:twitter-search-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "twitter-search-connector",
            "inputDataShape": {
               "kind" : "none"
            },
            "outputDataShape": {
               "kind" : "java",
               "type" : "twitter4j.Status"
            },
            "propertyDefinitionSteps": [{
              "name": "Search criteria",
              "description": "Specify criteria for search",
              "properties": {
                "filterOld": {
                  "kind": "parameter",
                  "displayName": "Ignore tweets previously found",
                  "group": "filter",
                  "label": "consumer,filter",
                  "required": false,
                  "type": "boolean",
                  "javaType": "boolean",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "defaultValue": true,
                  "componentProperty": false,
                  "description": "Filter out old tweets that have previously been polled"
                },
                "keywords": {
                  "kind": "path",
                  "displayName": "Keywords",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "Multiple search values can be separated with comma"
                },
                "delay": {
                  "kind": "parameter",
                  "displayName": "Delay",
                  "group": "scheduler",
                  "label": "consumer,scheduler",
                  "required": false,
                  "type": "integer",
                  "javaType": "long",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "defaultValue": 5000,
                  "componentProperty": false,
                  "description": "Milliseconds before the next poll"
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "salesforce",
      "name": "Salesforce",
      "description": "Cloud-based Customer Relationship Management",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {
        "loginUrl": {
          "kind": "property",
          "displayName": "Login Url",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "https://login.salesforce.com",
          "description": "URL of the Salesforce instance used for authentication by default set to https://login.salesforce.com"
        },
        "clientId": {
          "kind": "property",
          "displayName": "Client Id",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-id"],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "OAuth Consumer Key of the connected app configured in the Salesforce instance setup. Typically a connected app needs to be configured but one can be provided by installing a package."
        },
        "clientSecret": {
          "kind": "property",
          "displayName": "Client Secret",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-secret"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "OAuth Consumer Secret of the connected app configured in the Salesforce instance setup."
        },
        "refreshToken": {
          "kind": "property",
          "displayName": "Refresh Token",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Refresh token already obtained in the refresh token OAuth flow. One needs to setup a web application and configure a callback URL to receive the refresh token or configure using the builtin callback at https://login.salesforce.com/services/oauth2/success or https://test.salesforce.com/services/oauth2/success and then retrive the refresh_token from the URL at the end of the flow. Note that in development organizations Salesforce allows hosting the callback web application at localhost."
        },
        "userName": {
          "kind": "property",
          "displayName": "User Name",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Username used in OAuth flow to gain access to access token. It's easy to get started with password OAuth flow but in general one should avoid it as it is deemed less secure than other flows."
        },
        "password": {
          "kind": "property",
          "displayName": "Password",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Password used in OAuth flow to gain access to access token. It's easy to get started with password OAuth flow but in general one should avoid it as it is deemed less secure than other flows. Make sure that you append security token to the end of the password if using one."
        }
      },
      "actions": [
        {
          "id": "io.syndesis:salesforce-create-sobject-connector:latest",
          "name": "New record",
          "description": "Create a new record like Account, Contact or Order on Salesforce.",
          "tags": [ "dynamic" ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:salesforce-create-sobject-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "salesforce-create-sobject",
            "inputDataShape": {
               "kind": "json-schema"
            },
            "outputDataShape": {
               "kind": "java",
               "type": "org.apache.camel.component.salesforce.api.dto.CreateSObjectResult"
            },
            "propertyDefinitionSteps": [{
              "name": "Name of the object",
              "description": "Specify the Salesforce object name of the record to create",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-delete-sobject-connector:latest",
          "name": "Delete record",
          "description": "Delete a record from Salesforce.",
          "tags": [ "dynamic" ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:salesforce-delete-sobject-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "salesforce-delete-sobject",
            "inputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.SalesforceIdentifier"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Name of the object",
              "description": "Specify the Salesforce object name of the record to delete",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-delete-sobject-with-id-connector:latest",
          "name": "Delete record by external identifier",
          "description": "Delete a record from Salesforce based on the value of an external identifier.",
          "tags": [ "dynamic" ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:salesforce-delete-sobject-with-id-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "salesforce-delete-sobject-with-id",
            "inputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.SalesforceIdentifier"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Name of the object",
              "description": "Specify the Salesforce object name of the record to delete",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            },{
              "name": "External identifier field name",
              "description": "Specify the field name of the external identifier",
              "properties": {
                "sObjectIdName": {
                  "kind": "parameter",
                  "displayName": "External identifier field",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "Field name of the external identifier"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-get-sobject-connector:latest",
          "name": "Fetch record",
          "description": "Fetches a record from Salesforce by its identifier value.",
          "tags": [ "dynamic" ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:salesforce-get-sobject-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "salesforce-get-sobject",
            "inputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.SalesforceIdentifier"
            },
            "outputDataShape": {
               "kind": "json-schema"
            },
            "propertyDefinitionSteps": [{
              "name": "Name of the object",
              "description": "Specify the Salesforce object name of the record to fetch",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-get-sobject-with-id-connector:latest",
          "name": "Fetch record by external identifier",
          "description": "Fetches a record from Salesforce by the value of an external identifier.",
          "tags": [ "dynamic" ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:salesforce-get-sobject-with-id-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "salesforce-get-sobject-with-id",
            "inputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.SalesforceIdentifier"
            },
            "outputDataShape": {
               "kind": "json-schema"
            },
            "propertyDefinitionSteps": [{
              "name": "Name of the object",
              "description": "Specify the Salesforce object name of the record to fetch",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            },{
              "name": "External identifier field name",
              "description": "Specify the field name of the external identifier",
              "properties": {
                "sObjectIdName": {
                  "kind": "parameter",
                  "displayName": "External identifier field",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "Field name of the external identifier"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-update-sobject-connector:latest",
          "name": "Update record",
          "description": "Update a record on Salesforce.",
          "tags": [ "dynamic" ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:salesforce-update-sobject-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "salesforce-update-sobject",
            "inputDataShape": {
               "kind": "json-schema"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Name of the object",
              "description": "Specify the Salesforce object name of the record to update",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-upsert-sobject-connector:latest",
          "name": "Create or update record",
          "description": "Create or update a record on Salesforce.",
          "tags": [ "dynamic" ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:salesforce-upsert-sobject-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "salesforce-upsert-sobject",
            "inputDataShape": {
               "kind": "json-schema"
            },
            "outputDataShape": {
               "kind": "java",
               "type": "org.apache.camel.component.salesforce.api.dto.CreateSObjectResult"
            },
            "propertyDefinitionSteps": [{
              "name": "Name of the object",
              "description": "Specify the Salesforce object name of the record to create or update",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            },{
              "name": "Identifier field name",
              "description": "Specify the field name that holds the identifying value",
              "properties": {
                "sObjectIdName": {
                  "kind": "parameter",
                  "displayName": "Identifier field",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "Field name of the identifier"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-on-create-connector:latest",
          "name": "On create",
          "description": "Get notified when an Salesforce record is created.",
          "tags": [ "dynamic" ],
          "pattern": "From",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:salesforce-on-create-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "salesforce-on-create",
            "inputDataShape": {
               "kind": "none"
            },
            "outputDataShape": {
               "kind": "json-schema"
            },
            "propertyDefinitionSteps": [{
              "name": "Name of the object",
              "description": "Specify the Salesforce object name for which to receive notification when records are created",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-on-update-connector:latest",
          "name": "On update",
          "description": "Get notified when an Salesforce record is updated.",
          "tags": [ "dynamic" ],
          "pattern": "From",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:salesforce-on-update-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "salesforce-on-update",
            "inputDataShape": {
               "kind": "none"
            },
            "outputDataShape": {
               "kind": "json-schema"
            },
            "propertyDefinitionSteps": [{
              "name": "Name of the object",
              "description": "Specify the Salesforce object name for which to receive notification when records are updated",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-on-delete-connector:latest",
          "name": "On delete",
          "description": "Get notified when an Salesforce record is deleted.",
          "tags": [ "dynamic" ],
          "pattern": "From",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:salesforce-on-delete-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "salesforce-on-delete",
            "inputDataShape": {
               "kind": "none"
            },
            "outputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.SalesforceIdentifier"
            },
            "propertyDefinitionSteps": [{
              "name": "Name of the object",
              "description": "Specify the Salesforce object name for which to receive notification when records are deleted",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "sql-stored-connector",
      "name": "SQL Stored Procedure",
      "description": "Relational Database SQL Stored procedure invocation",
      "icon": "fa-database",
      "configuredProperties": {},
      "properties": {
        "url": {
          "kind": "property",
          "displayName": "Connection URL",
          "group": "producer",
          "label": "common",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "jdbc:postgresql://syndesis-db:5432/sampledb",
          "description": "JDBC URL of the database"
        },
        "user": {
          "kind": "property",
          "displayName": "Username",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "sampledb",
          "description": "Username for the database connection"
        },
        "password": {
          "kind": "property",
          "displayName": "Password",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Password for the database connection"
        },
        "schema": {
          "kind": "property",
          "displayName": "Schema",
          "group": "producer",
          "label": "common",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "sampledb",
          "description": "Database schema"
        },
        "catalog": {
          "kind": "property",
          "displayName": "Catalog",
          "group": "producer",
          "label": "common",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Database catalog"
        }
      },
      "actions": [
        {
          "id": "io.syndesis:sql-stored-connector:latest",
          "name": "Invoke SQL stored procedure",
          "description": "Invoke SQL stored procedure to get data in and/or out",
          "tags": [ "dynamic" ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis:sql-stored-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "sql-stored-connector",
            "inputDataShape": {
               "kind" : "json-schema"
            },
            "outputDataShape": {
               "kind" : "json-schema"
            },
            "propertyDefinitionSteps": [{
              "name": "Procedure Name",
              "description": "Select the Stored Procedure",
              "properties": {
                "procedureName": {
                  "kind": "path",
                  "displayName": "Procedure Name",
                  "group": "producer",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "Name of the Store Procedure"
                },
                "template": {
                  "kind": "path",
                  "displayName": "Template",
                  "group": "producer",
                  "required": true,
                  "type": "hidden",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "StoredProcedure template to perform"
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connection",
    "data": {
      "id": "5",
      "name": "PostgresDB",
      "description": "Sample Database Connection for Stored Procedure Invocation",
      "tags":["sampledb"],
      "icon": "fa-database",
      "connectorId": "sql-stored-connector",
      "configuredProperties": {
        "url": "jdbc:postgresql://syndesis-db:5432/sampledb",
        "user": "sampledb",
        "password": "@ENC:POSTGRESQL_SAMPLEDB_PASSWORD@",
        "schema": "sampledb"
      }
    }
  },
  {
    "kind": "connector-template",
    "data": {
      "id": "swagger-connector-template",
      "name": "Swagger API Connector",
      "description": "Swagger API Connector",
      "icon": "fa-link",
      "camelConnectorGAV": "io.syndesis:swagger-connector:@syndesis-connectors.version@",
      "camelConnectorPrefix": "swagger-operation",
      "properties": {
        "specification": {
          "kind": "property",
          "displayName": "Specification",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [ "blob" ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Swagger specification of the service"
        }
      },
      "connectorProperties": {
        "host":{
          "kind": "property",
          "displayName": "Host",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description":"Scheme hostname and port to direct the HTTP requests to in the form of https:\/\/hostname:port. Can be configured at the endpoint component or in the correspoding REST configuration in the Camel Context. If you give this component a name (e.g. petstore) that REST configuration is consulted first rest-swagger next and global configuration last. If set overrides any value found in the Swagger specification RestConfiguration. Can be overriden in endpoint configuration."
        },
        "operationId": {
          "kind": "property",
          "displayName": "Operation ID",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "hidden",
          "javaType": "java.lang.String",
          "tags": [],
          "deprecated": false,
          "secret": false,
          "componentProperty": false,
          "description": "ID of operation to invoke"
        },
        "specification": {
          "kind": "property",
          "displayName": "Specification",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "hidden",
          "javaType": "java.lang.String",
          "tags": [ "blob" ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Swagger specification of the service"
        }
      }
    }
  }
]
